cmake_minimum_required(VERSION 2.8)
project(IPCore)

if(PLATFORM_WINDOWS)
	set(PLATFORM_DIRECTORY Windows)
endif()

file(GLOB IPCORE_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/*.h")
file(GLOB IPCORE_DEBUG_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Debug/*.h")
file(GLOB IPCORE_FILE_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/File/*.h")
file(GLOB IPCORE_MEMORY_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Memory/*.h")
file(GLOB IPCORE_MEMORY_STL_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Memory/Stl/*.h")
file(GLOB IPCORE_PLATFORM_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Platform/${PLATFORM_DIRECTORY}/*.h")
file(GLOB IPCORE_PROCESS_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Process/*.h")
file(GLOB IPCORE_SYSTEM_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/System/*.h")
file(GLOB IPCORE_UTILS_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/IPCore/Utils/*.h")

file(GLOB IPCORE_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB IPCORE_DEBUG_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/Debug/*.cpp")
file(GLOB IPCORE_MEMORY_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/Memory/*.cpp")
file(GLOB IPCORE_PLATFORM_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/Platform/${PLATFORM_DIRECTORY}/*.cpp")
file(GLOB IPCORE_SYSTEM_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/System/*.cpp")
file(GLOB IPCORE_UTILS_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/Utils/*.cpp")

file(GLOB IPCORE_BUILD_SOURCE
	${IPCORE_HEADERS}
	${IPCORE_DEBUG_HEADERS}
	${IPCORE_FILE_HEADERS}
	${IPCORE_MEMORY_HEADERS}
	${IPCORE_MEMORY_STL_HEADERS}
	${IPCORE_PLATFORM_HEADERS}
	${IPCORE_PROCESS_HEADERS}
	${IPCORE_SYSTEM_HEADERS}
	${IPCORE_UTILS_HEADERS}
	${IPCORE_SOURCE}
	${IPCORE_DEBUG_SOURCE}
	${IPCORE_MEMORY_SOURCE}
	${IPCORE_PLATFORM_SOURCE}
	${IPCORE_SYSTEM_SOURCE}
	${IPCORE_UTILS_SOURCE}
) 

if(MSVC)
	source_group("include\\IPCore" FILES ${IPCORE_HEADERS})
	source_group("include\\IPCore\\Debug" FILES ${IPCORE_DEBUG_HEADERS})
	source_group("include\\IPCore\\File" FILES ${IPCORE_FILE_HEADERS})
	source_group("include\\IPCore\\Memory" FILES ${IPCORE_MEMORY_HEADERS})
	source_group("include\\IPCore\\Memory\\Stl" FILES ${IPCORE_MEMORY_STL_HEADERS})
	source_group("include\\IPCore\\Platform\\${PLATFORM_DIRECTORY}" FILES ${IPCORE_PLATFORM_HEADERS})
	source_group("include\\IPCore\\Process" FILES ${IPCORE_PROCESS_HEADERS})
	source_group("include\\IPCore\\System" FILES ${IPCORE_SYSTEM_HEADERS})
	source_group("include\\IPCore\\Utils" FILES ${IPCORE_UTILS_HEADERS})

	source_group("src" FILES ${IPCORE_SOURCE})
	source_group("src\\Debug" FILES ${IPCORE_DEBUG_SOURCE})
	source_group("src\\Memory" FILES ${IPCORE_MEMORY_SOURCE})
	source_group("src\\Platform\\${PLATFORM_DIRECTORY}" FILES ${IPCORE_PLATFORM_SOURCE})
	source_group("src\\System" FILES ${IPCORE_SYSTEM_SOURCE})
	source_group("src\\Utils" FILES ${IPCORE_UTILS_SOURCE})
endif(MSVC)

include_directories(${LOKI_INCLUDES_PATH} ${TBB_INCLUDES_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/include)

if(PLATFORM_WINDOWS AND MSVC AND BUILD_SHARED_LIBS) 
    add_definitions("-DIPCORE_EXPORTS=1")
endif()

add_library(IPCore ${LIBTYPE} ${IPCORE_BUILD_SOURCE})

# todo: decide if install should set up binary directories or library form
install (TARGETS IPCore ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${PLATFORM_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
                        LIBRARY DESTINATION lib/${PLATFORM_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
				            RUNTIME DESTINATION bin/${PLATFORM_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})

install (FILES ${IPCORE_HEADERS} DESTINATION include/IPCore)
install (FILES ${IPCORE_DEBUG_HEADERS} DESTINATION include/IPCore/Debug)
install (FILES ${IPCORE_FILE_HEADERS} DESTINATION include/IPCore/File)
install (FILES ${IPCORE_MEMORY_HEADERS} DESTINATION include/IPCore/Memory)
install (FILES ${IPCORE_MEMORY_STL_HEADERS} DESTINATION include/IPCore/Memory/Stl)
install (FILES ${IPCORE_PLATFORM_HEADERS} DESTINATION include/IPCore/Platform/${PLATFORM_DIRECTORY})
install (FILES ${IPCORE_PROCESS_HEADERS} DESTINATION include/IPCore/Process)
install (FILES ${IPCORE_SYSTEM_HEADERS} DESTINATION include/IPCore/System)
install (FILES ${IPCORE_UTILS_HEADERS} DESTINATION include/IPCore/Utils)


